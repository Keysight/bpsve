terraform {
	required_version = ">= 0.14.3"
}

variable "Region" {
	type = string
	default = "us-east-1"
}

variable "UserEmailTag" {
	type = string
	default = "aws-bps@amazon.com"
	description = "Email address tag of user creating the stack"
	validation {
		condition = length(var.UserEmailTag) >= 14
		error_message = "UserEmailTag minimum length must be >= 14."
	}
}

variable "UserLoginTag" {
	type = string
	default = "aws-bps"
	description = "Login ID tag of user creating the stack"
	validation {
		condition = length(var.UserLoginTag) >= 4
		error_message = "UserLoginTag minimum length must be >= 4."
	}
}

variable "BPSSCInstanceType" {
	type = string
	default = "t2.medium"
	description = "Instance type of BPS System Controller VM"
	validation {
		condition = can(regex("t2.2xlarge", var.BPSSCInstanceType)) || can(regex("t2.medium", var.BPSSCInstanceType))
		error_message = "BPSSCInstanceType must be one of (t2.2xlarge | t2.medium) types."
	}
}

variable "BPSvBladeInstanceType" {
	type = string
	default = "c5n.xlarge"
	description = "Instance type of BPS Virtual Blade VM"
	validation {
		condition =  can(regex("i3.8xlarge", var.BPSvBladeInstanceType)) || can(regex("c5n.xlarge", var.BPSvBladeInstanceType)) || can(regex("c5.xlarge", var.BPSvBladeInstanceType))
		error_message = "BPSvBladeInstanceType must be one of (i3.8xlarge | c5n.xlarge | c5.xlarge) types."
	}
}

variable "InboundIPv4CidrBlock" {
	type = string
	default = "42.42.42.42/32"
	description = "IP Address /32 or IP CIDR range connecting inbound to Ixia Client"
	validation {
		condition = length(var.InboundIPv4CidrBlock) >= 9 && length(var.InboundIPv4CidrBlock) <= 18 && can(regex("(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})", var.InboundIPv4CidrBlock))
		error_message = "InboundIPv4CidrBlock must be a valid IP CIDR range of the form x.x.x.x/x."
	}
}